@using Newtonsoft.Json
@{
    var userJson = Context.Session.GetString("User");
    var user = new ProfileModel();
    if (!string.IsNullOrEmpty(userJson))
    {
        user = JsonConvert.DeserializeObject<ProfileModel>(userJson);
    }

    var listLikedProducts = Context.Session.GetString("LikedItems");
    var likedProducts = new List<ProductResponseModel>();
    if (!string.IsNullOrEmpty(listLikedProducts))
    {
        likedProducts = JsonConvert.DeserializeObject<List<ProductResponseModel>>(listLikedProducts);
    }
}

<link rel="stylesheet" href="~/css/profile.css"/>

<div class="profile-container">
    <div class="sidebar">
        <h2>Settings</h2>
        <nav class="nav-links">
            <ul>
                <li><a href="#" id="profile-link" class="active" onclick="showContent('profile')">Profile</a></li>
                <li><a href="#" id="history-link" onclick="showContent('history')">Order History</a></li>
                <li><a href="#" id="favourites-link" onclick="showContent('favourites')">Favourites</a></li>
                <li><a href="#" id="addresses-link" onclick="showContent('addresses')">Addresses</a></li>
                <li><a asp-controller="Home" asp-action="Logout" id="logout-link" onclick="logout()">Logout</a></li>
            </ul>
        </nav>
    </div>

    <div class="main-content">
        <div id="profile" class="content-section">
            <div class="profile-info-container">
                <h2 class="cart-info__heading">My Wallet</h2>

                <div class="wallet-content">
                    <img class="card-img" src="assets/img/card1.png" alt="">
                    <img class="card-img" src="assets/img/card2.png" alt="">

                    <div class="new-card">
                        <img src="./assets/icons/plus.svg" alt="" class="new-card__icon icon">
                        <p class="new-card__text">Add New Card</p>
                    </div>
                </div>
            </div>
            <div class="profile-info-container">
                <h2 class="cart-info__heading">Profile Information</h2>
                <div class="profile-header" id="profile-header">
                    <div class="profile-header__content">
                        <img src="@user.AvatarUrl" alt="Profile Picture" class="profile-img" id="profile-avatar"/>
                        <input type="file" id="avatar-upload" style="display: none;" accept="image/*"/>
                        <div class="profile-info">
                            <p>
                                <span id="fullname-text">@user.FullName</span>
                                <input type="text" id="fullname-input" class="editable-field" value="@user.FullName"
                                       style="display: none;">
                            </p>
                            <p>
                                <span id="username-text">@user.Username</span>
                                <input type="text" id="username-input" class="editable-field" value="@user.Username"
                                       style="display: none;">
                            </p>
                        </div>
                    </div>
                    <button class="edit-button">Edit Avatar</button>
                </div>
            </div>

            <!-- Personal Information Section -->
            <div class="section" id="personal-info-section">
                <h3>Personal Information</h3>
                <div class="section-content">
                    <form asp-action="UpdateProfile" method="post">
                        <div class="info-grid">
                            <div class="info-item">
                                <label>Full Name</label>
                                <span id="fullname-text">@user.FullName</span>
                                <input type="text" id="fullname-input" name="fullName" class="editable-field"
                                       value="@user.FullName" style="display: none;">
                            </div>
                            <div class="info-item">
                                <label>Username</label>
                                <span id="username-text">@user.Username</span>
                                <input type="text" id="username-input" name="username" class="editable-field"
                                       value="@user.Username" style="display: none;">
                            </div>
                            <div class="info-item">
                                <label>Email Address</label>
                                <span id="email-text">@user.Email</span>
                                <input type="email" id="email-input" class="editable-field" value="@user.Email"
                                       style="display: none;" disabled="true">
                            </div>
                            <div class="info-item">
                                <label>Phone</label>
                                <span id="phone-text">@FormatPhoneNumber(user.PhoneNumber)</span>
                                <input type="text" id="phone-input" name="phoneNumber" class="editable-field"
                                       value="@user.PhoneNumber" style="display: none;">
                            </div>
                        </div>
                        <button type="submit" class="save-button" style="display: none;"
                                onclick="saveChanges('personal-info-section')">
                            Save
                        </button>
                    </form>
                    <button class="edit-button" onclick="toggleEdit('personal-info-section')">Edit</button>

                </div>
            </div>

            <!-- Address Section -->
            <div class="section" id="address-section">
                <h3>Address</h3>
                <div class="section-content">
                    <div class="info-grid">
                        <div class="info-item">
                            <label>Country</label>
                            <span id="country-text">United Kingdom</span>
                            <input type="text" id="country-input" class="editable-field" value="United Kingdom"
                                   style="display: none;">
                        </div>
                        <div class="info-item">
                            <label>City/State</label>
                            <span id="city-text">Leeds, East London</span>
                            <input type="text" id="city-input" class="editable-field" value="Leeds, East London"
                                   style="display: none;">
                        </div>
                    </div>
                    <button class="edit-button" onclick="toggleEdit('address-section')">Edit</button>
                    <button class="save-button" style="display: none;" onclick="saveChanges('address-section')">Save
                    </button>
                </div>
            </div>
        </div>


        <div id="history" class="content-section" style="display:none;">
            <h2>Order History</h2>
            @* <div class="orders-table-wrapper"> *@
            @*     <table class="orders-table"> *@
            @*         <thead> *@
            @*         <tr> *@
            @*             <th>Order ID</th> *@
            @*             <th>Date</th> *@
            @*             <th>Total</th> *@
            @*             <th>Status</th> *@
            @*             <th>Action</th> *@
            @*         </tr> *@
            @*         </thead> *@
            @*         <tbody> *@
            @*         <tr> *@
            @*             <td>ORD12345</td> *@
            @*             <td>February 10, 2023</td> *@
            @*             <td>@string.Format("{0:N0}đ", 200000)</td> *@
            @*             <td> *@
            @*                 <span class="status status--shipped"> *@
            @*                     Shipped *@
            @*                 </span> *@
            @*             </td> *@
            @*             <td><a href="/Order/Details/ORD12345" class="btn btn--primary btn--rounded">View Details</a> *@
            @*             </td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td>ORD67890</td> *@
            @*             <td>March 15, 2023</td> *@
            @*             <td>@string.Format("{0:N0}đ", 200000)</td> *@
            @*             <td> *@
            @*                 <span class="status status--delivered"> *@
            @*                     Delivered *@
            @*                 </span> *@
            @*             </td> *@
            @*             <td><a href="/Order/Details/ORD67890" class="btn btn--primary btn--rounded">View Details</a> *@
            @*             </td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td>ORD11223</td> *@
            @*             <td>April 25, 2023</td> *@
            @*             <td>@string.Format("{0:N0}đ", 200000)</td> *@
            @*             <td> *@
            @*                 <span class="status status--pending"> *@
            @*                     Pending *@
            @*                 </span> *@
            @*             </td> *@
            @*             <td><a href="/Order/Details/ORD11223" class="btn btn--primary btn--rounded">View Details</a> *@
            @*             </td> *@
            @*         </tr> *@
            @*         </tbody> *@
            @*     </table> *@
            @* </div> *@
            <div class="order-container">
                <!-- Header Section -->
                <div class="order-header">
                    <div class="shop-info">
                        <span class="mall-badge">ORD12345</span>
                        <span class="shop-name">February 10, 2023</span>
                    </div>
                    <div class="shop-actions">
                        <span class="status-completed">Delivered</span>
                    </div>
                </div>

                <!-- Product List -->
                <div class="product-list">
                    <!-- Product Item -->
                    @foreach (var product in likedProducts)
                    {
                        <div class="product-item">
                            <img class="product-image" src="@product.Img_url" alt="Product Image"/>
                            <div class="product-info">
                                <div class="product-title">
                                    @product.Name
                                </div>
                                <div class="product-details">@product.Type</div>
                                <div class="product-quantity">x1</div>
                            </div>
                            <div class="product-pricing">
                                <span class="price">@string.Format("{0:N0}đ", product.Price)</span>
                            </div>
                        </div>
                    }
                </div>

                <div class="order-total">
                    <span>Thành tiền:</span>
                    <span class="total-price">255.848</span>
                </div>
            </div>

        </div>

        <div id="favourites" class="content-section" style="display:none;">
            <h2>Favourites</h2>
            <div class="favourites-list">
                @foreach (var product in likedProducts)
                {
                    <div class="favourite-item">
                        <img src="@product.Img_url" alt="@product.Name" class="favourite-item__thumb">
                        <div class="favourite-item__details">
                            <h3 class="favourite-item__title">@product.Name</h3>
                            <p class="favourite-item__price">@string.Format("{0:N0}đ", product.Price)</p>
                            <div class="favourite-item__actions">
                                <button class="btn btn--primary btn--rounded">Add to Cart</button>
                                @* <button class="btn btn--secondary btn--rounded"> *@
                                @*     <img src="~/assets/icons/heart-2.svg" alt="Save" class="icon"> Save *@
                                @* </button> *@
                                <button class="btn btn--danger btn--rounded">
                                    <img src="~/assets/icons/trash.svg" alt="Delete" class="icon"> Remove
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div id="addresses" class="content-section" style="display:none;">
            <h2>Addresses</h2>
            <div class="addresses-list">
                <!-- Address 1 -->
                <div class="address-card">
                    <div class="address-card__details">
                        <h3 class="address-card__type">Home Address</h3>
                        <p class="address-card__text">123 Main St, Springfield, IL, USA</p>
                    </div>
                    <div class="address-card__actions">
                        <button class="btn btn--secondary btn--rounded">
                            <img src="~/assets/icons/edit.svg" alt="Edit" class="icon"> Edit
                        </button>
                        <button class="btn btn--danger btn--rounded">
                            <img src="~/assets/icons/trash.svg" alt="Delete" class="icon"> Delete
                        </button>
                    </div>
                </div>

                <!-- Address 2 -->
                <div class="address-card">
                    <div class="address-card__details">
                        <h3 class="address-card__type">Shipping Address</h3>
                        <p class="address-card__text">456 Oak St, Springfield, IL, USA</p>
                    </div>
                    <div class="address-card__actions">
                        <button class="btn btn--secondary btn--rounded">
                            <img src="~/assets/icons/edit.svg" alt="Edit" class="icon"> Edit
                        </button>
                        <button class="btn btn--danger btn--rounded">
                            <img src="~/assets/icons/trash.svg" alt="Delete" class="icon"> Delete
                        </button>
                    </div>
                </div>

                <!-- Add New Address -->
                <div class="add-address">
                    <button class="btn btn--primary btn--rounded" onclick="showModal('add-address-modal')">
                        <img src="~/assets/icons/add.svg" alt="Add" class="icon"> Add New Address
                    </button>
                </div>
            </div>
        </div>

    </div>
    <div id="add-address-modal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal('add-address-modal')">&times;</span>
            <h2>Add New Address</h2>
            <form id="add-address-form">
                <div class="form-group">
                    <label for="address-type">Address Type</label>
                    <input type="text" id="address-type" name="addressType" placeholder="e.g., Home, Office" required>
                </div>
                <div class="form-group">
                    <label for="address-line">Address</label>
                    <input id="address-line" name="addressLine" placeholder="Enter full address" required></input>
                </div>
                <div class="form-group">
                    <label for="city">City</label>
                    <input type="text" id="city" name="city" placeholder="Enter city" required>
                </div>
                <div class="form-group">
                    <label for="state">State</label>
                    <input type="text" id="state" name="state" placeholder="Enter state" required>
                </div>
                <div class="form-group">
                    <label for="zip-code">ZIP Code</label>
                    <input type="text" id="zip-code" name="zipCode" placeholder="Enter ZIP code" required>
                </div>
                <button type="button" onclick="saveNewAddress()" class="save-button save-address">Save Address</button>
            </form>
        </div>
    </div>
</div>

<script>
    function showContent(section) {
        const sections = document.querySelectorAll('.content-section');
        sections.forEach(section => section.style.display = 'none');

        document.getElementById(section).style.display = 'block';

        const links = document.querySelectorAll('.nav-links a');
        links.forEach(link => link.classList.remove('active'));
        document.getElementById(section + '-link').classList.add('active');
    }

    showContent('profile');

    function toggleEdit(sectionId) {
        const section = document.getElementById(sectionId);
        const spans = section.querySelectorAll('span');
        const inputs = section.querySelectorAll('input');
        const editButton = section.querySelector('.edit-button');
        const saveButton = section.querySelector('.save-button');

        // Toggle to Edit Mode
        spans.forEach(span => span.style.display = 'none');
        inputs.forEach(input => input.style.display = 'block');

        // Show Save Button and Hide Edit Button
        editButton.style.display = 'none';
        saveButton.style.display = 'block';
    }

    function saveChanges(sectionId) {
        const section = document.getElementById(sectionId);
        const spans = section.querySelectorAll('span');
        const inputs = section.querySelectorAll('input');
        const editButton = section.querySelector('.edit-button');
        const saveButton = section.querySelector('.save-button');

        // Save Changes
        spans.forEach((span, index) => {
            span.textContent = inputs[index].value;
            span.style.display = 'block';
            inputs[index].style.display = 'none';
        });

        // Toggle back to View Mode
        editButton.style.display = 'block';
        saveButton.style.display = 'none';
    }

    function updateAvatar(event) {
        const avatarImg = document.getElementById('profile-avatar');
        const file = event.target.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                avatarImg.src = e.target.result; // Set the new image source
            };
            reader.readAsDataURL(file);
        }
    }

    function triggerFileInput() {
        const avatarUpload = document.getElementById('avatar-upload');
        avatarUpload.click(); // Kích hoạt hành động chọn file
    }

    function updateAvatar(event) {
        const avatarImg = document.getElementById('profile-avatar');
        const file = event.target.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                avatarImg.src = e.target.result; // Cập nhật ảnh đại diện
            };
            reader.readAsDataURL(file);
        }
    }

    function showModal(modalId) {
        const modal = document.getElementById(modalId);
        modal.style.display = "block";

        // Close the modal if clicked outside the content
        window.addEventListener("click", function handleOutsideClick(event) {
            if (event.target === modal) {
                closeModal(modalId);
                window.removeEventListener("click", handleOutsideClick); // Remove event listener after it's triggered
            }
        });
    }

    function closeModal(modalId) {
        const modal = document.getElementById(modalId);
        modal.style.display = "none";
    }

    function saveNewAddress() {
        const form = document.getElementById('add-address-form');
        const formData = new FormData(form);

        const newAddress = {
            addressType: formData.get('addressType'),
            addressLine: formData.get('addressLine'),
            city: formData.get('city'),
            state: formData.get('state'),
            zipCode: formData.get('zipCode'),
        };

        // Optionally, send newAddress to the server using AJAX or update the DOM
        console.log('New Address:', newAddress);

        // Close the modal after saving
        closeModal('add-address-modal');
    }

</script>

@functions {

    public string FormatPhoneNumber(string phoneNumber)
    {
        if (string.IsNullOrEmpty(phoneNumber))
        {
            return phoneNumber;
        }

        // Example: Format phone number as (XXX) XXX-XXXX
        return string.Format("{0:(###) ###-####}", long.Parse(phoneNumber.Replace(" ", "").Replace("+", "").Replace("-", "")));
    }

}