@using Newtonsoft.Json
@model ProductModel
@{
    var userJson = Context.Session.GetString("User");
    var user = new ProfileModel();
    if (!string.IsNullOrEmpty(userJson))
    {
        user = JsonConvert.DeserializeObject<ProfileModel>(userJson);
    }
}

<link rel="stylesheet" href="~/css/product.css" asp-append-version="true">

<div class="product-container prod-info-content">
    <div class="row">
        <div class="prod-preview">
            <div class="prod-preview__item">
                <img
                    src="@Model.Img"
                    alt=""
                    class="prod-preview__img"
                />
            </div>
        </div>

        <div class="form">
            <section class="prod-info">
                <h1 class="prod-info__heading">
                    @Model.Name
                </h1>
                <div class="prod-info__desc">
                    <div class="prod-props">
                        <div class="prod-prop">
                            <img
                                src="~/assets/icons/document.svg"
                                alt=""
                                class="prod-prop__icon icon"
                            />
                            <h4 class="prod-prop__title">Compare</h4>
                        </div>
                        <div class="prod-prop">
                            <img
                                src="~/assets/icons/buy.svg"
                                alt=""
                                class="prod-prop__icon icon"
                            />
                            <div>
                                <h4 class="prod-prop__title">Delivery</h4>
                                <p class="prod-prop__desc">From @string.Format("{0:N0}đ", 16000)
                                    for 1-3 days</p>
                            </div>
                        </div>
                        <div class="prod-prop">
                            <img
                                src="~/assets/icons/bag.svg"
                                alt=""
                                class="prod-prop__icon icon"
                            />
                            <div>
                                <h4 class="prod-prop__title">Pickup</h4>
                                <p class="prod-prop__desc">Out of 2 store, today</p>
                            </div>
                        </div>
                    </div>
                    <div class="prod-info__card">
                        <div class="prod-info__row">
                            <span class="prod-info__price">@string.Format("{0:N0}đ", Model.Price)
                            </span>
                            <span class="prod-info__tax">10%</span>
                        </div>
                        <p class="prod-info__total-price">@string.Format("{0:N0}đ", Model.Price)
                        </p>
                        <div class="prod-info__row">
                            <button
                                class="btn btn--primary prod-info__add-to-cart"
                                \>
                                Add to cart
                            </button>
                            <button class="like-btn prod-info__like-btn" data-product-id="@Model.Id">
                                @if (Model.UserLiked.Contains(user?.Id))
                                {
                                    <img
                                        src="~/assets/icons/red-heart.svg"
                                        alt="Liked"
                                        class="like-btn__icon icon"/>
                                }
                                else
                                {
                                    <img
                                        src="~/assets/icons/heart.svg"
                                        alt="Not Liked"
                                        class="like-btn__icon icon"/>
                                }

                            </button>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>

    <div class="row-info">
        @* <div class="row-info__title"> *@
        @*     <span class="row-info__title--description">Description</span> *@
        @*     <span>Features</span> *@
        @*     <span class="row-info__title--reviews">Reviews (1100)</span> *@
        @*     <span>Similar</span> *@
        @* </div> *@

        <div class="row-info__description">
            <h2 class="description-header">
                @Model.Name
            </h2>
            <p class="description-content">@Model.Description</p>

            @* <h3>Lorem ipsum dolor sit amet.</h3> *@
            @* <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus assumenda, beatae cum eos placeat *@
            @*     quis quos *@
            @*     tempora? Ad consequatur dicta doloremque necessitatibus optio quae, quaerat quidem quis ullam *@
            @*     voluptatum.</p> *@

            @* <div class="image"> *@
            @*     <img src="~/assets/img/product1.png" *@
            @*          alt=""> *@
            @*     <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</span> *@
            @* </div> *@

            @* <div class="block-quotes"> *@
            @*     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, dolorum ipsam iusto neque rem *@
            @*         sit *@
            @*         tempore temporibus totam veritatis voluptas. Ad asperiores dignissimos error facere itaque minus *@
            @*         nemo *@
            @*         repudiandae voluptatibus.</p> *@
            @* </div> *@

            @* <h3>Lorem ipsum dolor sit amet.</h3> *@
            @* <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus assumenda, beatae cum eos placeat *@
            @*     quis quos *@
            @*     tempora? Ad consequatur dicta doloremque necessitatibus optio quae, quaerat quidem quis ullam *@
            @*     voluptatum.</p> *@
            @* *@
            @* <p style="margin-bottom: 30px">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus *@
            @*     assumenda, *@
            @*     beatae cum eos placeat quis quos tempora? Ad consequatur dicta doloremque necessitatibus optio quae, *@
            @*     quaerat *@
            @*     quidem quis ullam voluptatum.</p> *@

        </div>
    </div>
</div>
<div id="snackbar">Item added to cart successfully!</div>

<script>
    const redHeartIcon = '@Url.Content("~/assets/icons/red-heart.svg")';
    const heartIcon = '@Url.Content("~/assets/icons/heart.svg")';

    document.querySelectorAll('.prod-info__like-btn').forEach(button => {
        button.addEventListener('click', async (event) => {
            const user = @Html.Raw(JsonConvert.SerializeObject(user));
            if (user === null) {
                // Redirect to the login page
                window.location.href = '/Login';
                return;
            }
            const productId = button.getAttribute('data-product-id');
            const response = await fetch(`/Product/Like?id=${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            const result = await response.json();
            if (result.success) {
                // Update the icon based on the result
                const img = button.querySelector('img');
                if (img.alt === "Not Liked") {
                    img.src = redHeartIcon; // Use the Razor-generated URL
                    img.alt = 'Liked';
                } else {
                    img.src = heartIcon;
                    img.alt = 'Not Liked';
                }
            } else {
                console.error(result.error);
                alert('An error occurred while updating the like status');
            }
        });
    });

    document.querySelector('.prod-info__add-to-cart').addEventListener('click', async (event) => {
        const user = @Html.Raw(JsonConvert.SerializeObject(user));
        if (user === null) {
            // Redirect to the login page
            window.location.href = '/Login';
            return;
        }
        const productId = '@Model.Id'; // Define productId here
        const response = await fetch(`/Product/AddToCart?id=${productId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                productId: productId,
                quantity: 1,
            }),
        });

        if (response.ok) {
            showSnackbar();
        }
    });

    function showSnackbar() {
        const snackbar = document.getElementById("snackbar");
        snackbar.className = "show";
        setTimeout(function () {
            snackbar.className = snackbar.className.replace("show", "");
        }, 3000);
    }
</script>
